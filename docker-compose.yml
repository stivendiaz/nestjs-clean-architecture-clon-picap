services:
  api:
    build:
      dockerfile: Dockerfile
      context: .
      # Only will build development stage from our dockerfile
      target: development
    volumes:
      - .:/usr/src/app
      - .:/usr/src/app/node_modules
    env_file:
    - ./src/shared/config/envs/development.env
    # Run a command against the development stage of the image
    command: npm run start:dev
    ports:
      - 3000:3000
    depends_on:
      - redis
      - postgres
    networks:
      - docker_network
  redis: # Name of container
    image: redis
    expose:
      - '6379'
    ports:
      - 6379:6379
    volumes:
      - redis:/data
    networks:
      - docker_network
  postgres:
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}
    ports:
      - "5433:5432"
    expose:
      - 5432
    volumes:
      - ./database-seed.sql:/docker-entrypoint-initdb.d/database-seed.sql
    networks:
      - docker_network
volumes:
  redis:
    driver: local
  db:
networks:
  docker_network:
    driver: bridge